var express = require('express'),
  bodyParser = require('body-parser'),
  passport = require('passport'),
  SAML = require('passport-saml').SAML,
  ShibbolethStrategy = require('../index.js').Strategy,
  request = require('request'),
  should = require('should'),
  fs = require('fs'),
  moment = require('moment'),
  sinon = require('sinon');

describe('passport-shibboleth', function() {
  describe('Test Shibboleth', function() {
    var fakeClock,
      checks = [
        {
          name: 'Test shib - valid encrypted request',
          samlResponse: {
            SAMLResponse: ''
          },
          config: {
            entryPoint: 'https://idp.testshib.org/idp/profile/SAML2/Redirect/SSO',
            publicCert: 'MIIEDjCCAvagAwIBAgIBADANBgkqhkiG9w0BAQUFADBnMQswCQYDVQQGEwJVUzEVMBMGA1UECBMMUGVubnN5bHZhbmlhMRMwEQYDVQQHEwpQaXR0c2J1cmdoMREwDwYDVQQKEwhUZXN0U2hpYjEZMBcGA1UEAxMQaWRwLnRlc3RzaGliLm9yZzAeFw0wNjA4MzAyMTEyMjVaFw0xNjA4MjcyMTEyMjVaMGcxCzAJBgNVBAYTAlVTMRUwEwYDVQQIEwxQZW5uc3lsdmFuaWExEzARBgNVBAcTClBpdHRzYnVyZ2gxETAPBgNVBAoTCFRlc3RTaGliMRkwFwYDVQQDExBpZHAudGVzdHNoaWIub3JnMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArYkCGuTmJp9eAOSGHwRJo1SNatB5ZOKqDM9ysg7CyVTDClcpu93gSP10nH4gkCZOlnESNgttg0r+MqL8tfJC6ybddEFB3YBo8PZajKSe3OQ01Ow3yT4I+Wdg1tsTpSge9gEz7SrC07EkYmHuPtd71CHiUaCWDv+xVfUQX0aTNPFmDixzUjoYzbGDrtAyCqA8f9CN2txIfJnpHE6q6CmKcoLADS4UrNPlhHSzd614kR/JYiks0K4kbRqCQF0Dv0P5Di+rEfefC6glV8ysC8dB5/9nb0yh/ojRuJGmgMWHgWk6h0ihjihqiu4jACovUZ7vVOCgSE5Ipn7OIwqd93zp2wIDAQABo4HEMIHBMB0GA1UdDgQWBBSsBQ869nh83KqZr5jArr4/7b+QazCBkQYDVR0jBIGJMIGGgBSsBQ869nh83KqZr5jArr4/7b+Qa6FrpGkwZzELMAkGA1UEBhMCVVMxFTATBgNVBAgTDFBlbm5zeWx2YW5pYTETMBEGA1UEBxMKUGl0dHNidXJnaDERMA8GA1UEChMIVGVzdFNoaWIxGTAXBgNVBAMTEGlkcC50ZXN0c2hpYi5vcmeCAQAwDAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAjR29PhrCbk8qLN5MFfSVk98t3CT9jHZoYxd8QMRLI4j7iYQxXiGJTT1FXs1nd4Rha9un+LqTfeMMYqISdDDI6tv8iNpkOAvZZUosVkUo93pv1T0RPz35hcHHYq2yee59HJOco2bFlcsH8JBXRSRrJ3Q7Eut+z9uo80JdGNJ4/SJy5UorZ8KazGj16lfJhOBXldgrhppQBb0Nq6HKHguqmwRfJ+WkxemZXzhediAjGeka8nz8JjwxpUjAiSWYKLtJhGEaTqCYxCCX2Dw+dOTqUzHOZ7WKv4JXPK5G/Uhr8K/qhmFT2nIQi538n6rVYLeWj8Bbnl+ev0peYzxFyF5sQA==',
            entityId: 'http://example.serviceprovider.com',
            domain: 'example.serviceprovider.com',
            identifierFormat: 'urn:oasis:names:tc:SAML:2.0:nameid-format:transient',
            privateKey: fs.readFileSync(__dirname + '/private_key.pem'),
            callbackUrl: 'http://example.serviceprovider.com/login'
          },
          expectedStatusCode: 200,
          expectedNameIDStartsWith: '_32990a6fe34e615a7657a8fe2056d885',
          mockDate: '2014-06-02T17:48:56.820Z'
        }
      ],
      server,
      PORT = 3033;

    function mockServer(check) {
      return function(done) {
        var pp = new passport.Authenticator();
        var app = express();
        app.use(bodyParser.urlencoded({extended: false}));
        app.use(pp.initialize());
        var config = check.config;
        config.callbackUrl = 'http://localhost:' + PORT + '/login';
        var profile = null;
        var strategy = new ShibbolethStrategy(config, function (_profile, done) {
            profile = _profile;
            //console.log('profile', profile);
            done(null, { id: profile.nameID });
          });
        pp.use(strategy);

        var userSerialized = false;
        pp.serializeUser(function(user, done) {
          userSerialized = true;
          done(null, user);
        });

        fakeClock = sinon.useFakeTimers(Date.parse(check.mockDate));

        app.post('/login',
          pp.authenticate('shibboleth'),
          function (req, res) {
            res.status(200).send('200 OK');
          });

        app.use(function (err, req, res, next) {
          console.error('Error during test', err.stack);
          res.status(500).send('500 Internal Server Error');
        });

        server = app.listen(PORT, function () {
          var requestOpts = {
            url: 'http://localhost:' + PORT + '/login',
            method: 'POST',
            followAllRedirects: true,
            form: check.samlResponse
          };
          request(requestOpts, function (err, response, body) {
            should.not.exist(err);
            //console.log('body', body);
            response.statusCode.should.equal(check.expectedStatusCode);
            if (response.statusCode == 200) {
              userSerialized.should.be.true;
              if (check.expectedNameIDStartsWith) {
                profile.nameID.should.startWith(check.expectedNameIDStartsWith);
              }
            }
            done();
          });
        });
      };
    }

    // Run all checks
    for( var i = 0; i < checks.length; i++ ) {
      var check = checks[i];
      //console.log(new ShibbolethStrategy(check.config).generateServiceProviderMetadata(check.config.publicCert));
      it(check.name, mockServer(check));
    }

    afterEach(function (done) {
      fakeClock.restore();
      server.close(done);
    });

  });
});
